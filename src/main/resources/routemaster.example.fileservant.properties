#
# All lines that start with the '#' symbol will be ignored.
#

# 
# These are the current options that are available, namely the location of the 
# 404, and 500 error pages
# 
option.error.500=/error/500.html
option.error.404=/error/404.html

# 
# If you wish to define a route, start the property name with a 'route.' and it
# will be bound to the defined path.  This servant uses all of the resources 
# in the jar rather than from the file system.
#
# routes __must__ extend
#     synapticloop.nanohttpd.router.Routable

route./*=synapticloop.nanohttpd.servant.StaticFileServant

# This route will list all of the handlers
route./handlers/=synapticloop.nanohttpd.example.servant.HandlerTemplarServant

# 
# If you wish to define a restful route, start the property name with a 'rest.' 
# and it
#
# will be bound to the defined path and pass through any defined parameters as
# a hashmap
#
# rest routes __must__ extend
#     synapticloop.nanohttpd.router.RestRoutable

rest./rest/%method%/=synapticloop.nanohttpd.example.servant.RouteMasterRestTemplarServant

# This is a simple rest servant that shows the various http methods being called
# with mapped and unmapped parameters.  Any parameters that form part of the
# uri after the /%mapped%/ mapping will be passed through wholly as a string
# of 'unmapped'
#
# e.g.:
#  public Response doGet(File rootDir, IHTTPSession httpSession, HashMap<String, String> restParams, String unmappedParams)
#
# rest routes __must__ extend
#     synapticloop.nanohttpd.router.RestRoutable

rest./simple/%mapped%/=synapticloop.nanohttpd.example.servant.SimpleRestServant

# This is a simple rest servant that lists the mimetypes that are registered
# with no mapped or unmapped parameters.  Any parameters that form part of the
# uri after the /%mapped%/ mapping will be passed through wholly as a string
# of 'unmapped', however they will not be picked up.
#
# e.g.:
#  public Response doGet(File rootDir, IHTTPSession httpSession, HashMap<String, String> restParams, String unmappedParams)
#
# rest routes __must__ extend
#     synapticloop.nanohttpd.router.RestRoutable

rest./mimetypes/=synapticloop.nanohttpd.example.servant.MimeTypesRestServant

# Now for some handlers

handler.templar=synapticloop.nanohttpd.handler.TemplarHandler

option.indexfiles=index.html.templar,index.html